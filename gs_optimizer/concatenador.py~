
# -*- coding: utf-8 -*-
from lxml import etree
from datetime import datetime
from copy import deepcopy
import os
import copy
import auto_tune
import random


random.seed()

nLicks = 10
licks = [[] for i in range (nLicks)]

if os.stat('../exato/route').st_size != 0: #está dessa forma para poder rodar o arquivo de testes que se encontra em /exato
	f = open("../exato/route", "r")
	rotaAux = []
	rota = []

	linha = f.readline()

	while linha:
		rotaAux.append(linha.split())
		linha = f.readline()

	for r in range(len(rotaAux)):
		for i in range(len(rotaAux[r])):
			rotaAux[r][i] = int(rotaAux[r][i])

	rota.append(copy.copy(rotaAux[0][0]))
	rota.append(copy.copy(rotaAux[0][1]))

	for i in range(len(rotaAux)):
		for j in range(len(rotaAux)):
			if rota[i+1] == rotaAux[j][0]:
				rota.append(copy.copy(rotaAux[j][1]))
			 	
	del rota[-1]
	del rota[-1]

	''' ******************************************************************
		*                          Concatenação                          *
		****************************************************************** '''

	codigo = datetime.now()
	codigo = codigo.strftime("%d-%m-%Y-%H-%M-%S")

	for i in range(len(rota)):
		fileName = "../banco_licks/%s.xml" % rota[i]
		lick = open(fileName, "r")
		treeL = etree.parse(lick)
		rootL = treeL.getroot()
		
		for note in list(rootL.find('part').find('measure').iter('note')):
			licks[i].append(deepcopy(note))
	
	base = open("../moderate_blues.xml", "r")
	treeB = etree.parse(base)
	rootB = treeB.getroot()

	index = 0
	for part in list(rootB.iter('part')):
		if part.get('id') == "P4":
			for measure in list(part.iter('measure')):
				if measure.get('number') == '1':
					continue
				if index == 10:
					break
				for i in range(len(licks[index])):
					measure.append(deepcopy(licks[index][i]))
				#auto_tune.auto_tune(measure)
				index += 1
			break

	resultName = "../result/" + codigo + ".xml"
	out = open(resultName, "w")
	rootB = etree.tostring(rootB)
	out.write(rootB)
	out.close()
	base.close()
	lick.close()
	f.close()
else:
	for f in os.listdir('../result'):
		indice += 1

	out = open("log_erro_solo", "a")
	out.write(str(indice) + '\n')
	out.close()
	
